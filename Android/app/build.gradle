apply plugin: 'com.android.application'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion targetSdk
    defaultConfig {
        applicationId "ru.inwords.inwords"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode 20
        versionName "2.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_URL", "\"https://api.inwords.ru/\""
        buildConfigField "String", "GRPC_API_URL", "\"grpc.inwords.ru\""
        buildConfigField "String", "TTS_GOOGLE_API_URL", "\"https://texttospeech.googleapis.com\""
        buildConfigField "String", "POLICY_PRIVACY_URL", "\"https://inwords.ru/policy/privacy.html\""

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
                arg("room.incremental", "true")
                arg("room.expandProjection", "true")
            }
        }
    }

    signingConfigs {
        release {
            def releaseKeystorePropertiesFile = rootProject.file("app/keystore-release.properties")
            def dummyKeystorePropertiesFile = rootProject.file("app/keystore-dummy.properties")
            def keystorePropertiesFile = releaseKeystorePropertiesFile.exists() ? releaseKeystorePropertiesFile : dummyKeystorePropertiesFile

            def keystoreProperties = new Properties()
            keystoreProperties.load(keystorePropertiesFile.newDataInputStream())

            storeFile file(keystoreProperties['storeFile'])
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release

            manifestPlaceholders = [crashlytics: "true"]
        }
        debug {
            manifestPlaceholders = [crashlytics: "false"]
        }
    }

    buildFeatures {
        // Determines whether to generate a BuildConfig class.
        buildConfig = true
        // Determines whether to support View Binding.
        viewBinding = true
        // Determines whether to support injecting custom variables into the module's R class.
        resValues = true
    }

    sourceSets {
        main {
            proto {
                // In addition to the default 'src/main/proto'
                srcDir '..\\..\\WebApi\\InWords.WebApi\\InWords.Protobuf\\'
                srcDir 'src\\main\\java\\ru\\inwords\\inwords\\texttospeech\\data\\grpc'
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/INDEX.LIST'
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$versions.PROTOC"
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:$versions.PROTOC"
        }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$versions.GRPC"
        }
    }
    clean {
        delete generatedFilesBaseDir
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
            task.plugins {
                grpc { // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(path: ':designcorelib')
    implementation project(path: ':networklib')
    implementation project(path: ':corelib')

    implementation 'com.google.firebase:firebase-analytics:18.0.0'
    implementation 'com.google.android.gms:play-services-auth:19.0.0'

    implementation 'com.google.firebase:firebase-crashlytics-ktx:17.3.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //support
    implementation "androidx.appcompat:appcompat:$versions.ANDROID_X"

    implementation "androidx.recyclerview:recyclerview:$versions.RECYCLER"
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0-rc03"

    implementation "androidx.viewpager2:viewpager2:1.0.0"

    implementation "androidx.coordinatorlayout:coordinatorlayout:1.1.0"

    implementation "androidx.constraintlayout:constraintlayout:$versions.CONSTRAINT_LAYOUT"

    //preference
    implementation "androidx.preference:preference-ktx:$versions.PREFERENCE"

    //android core ktx
    implementation "androidx.core:core-ktx:$versions.CORE_KTX"

    // Fragment
    implementation "androidx.fragment:fragment:$versions.FRAGMENT"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.NAVIGATION"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.NAVIGATION"

    // Work manager
    implementation "androidx.work:work-runtime-ktx:$versions.WORK_MANAGER"
    implementation "androidx.work:work-rxjava2:$versions.WORK_MANAGER"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$versions.RX_JAVA"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.RX_ANDROID"

    //Fresco
    implementation('com.facebook.fresco:fresco:2.1.0') {
        exclude group: 'com.facebook.soloader', module: 'soloader'
    }
    implementation("com.facebook.fresco:imagepipeline-okhttp3:2.1.0") {
        exclude group: 'com.facebook.soloader', module: 'soloader'
    }

    //Groupie
    implementation "com.github.lisawray.groupie:groupie:$versions.GROUPIE"
    implementation "com.github.lisawray.groupie:groupie-viewbinding:$versions.GROUPIE"

    //Shimmer
    implementation "com.facebook.shimmer:shimmer:$versions.SHIMMER"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$versions.OK_HTTP"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.OK_HTTP"

    // Room components
    implementation "androidx.room:room-runtime:$versions.ROOM"
    implementation "androidx.room:room-rxjava2:$versions.ROOM"
    kapt "androidx.room:room-compiler:$versions.ROOM"

    //androidTestImplementation "android.arch.persistence.room:testing:$versions.ROOM"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.LIFECYCLE"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.LIFECYCLE"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$versions.LIFECYCLE"

    // Dagger
    implementation "com.google.dagger:dagger:$versions.DAGGER"
    kapt "com.google.dagger:dagger-compiler:$versions.DAGGER"
    // if you use the support libraries
    implementation "com.google.dagger:dagger-android-support:$versions.DAGGER"
    kapt "com.google.dagger:dagger-android-processor:$versions.DAGGER"

    // You need to build grpc-java to obtain these libraries below.
    implementation "io.grpc:grpc-protobuf-lite:$versions.GRPC"
    implementation "io.grpc:grpc-stub:$versions.GRPC"
    implementation "io.grpc:grpc-android:$versions.GRPC" //TODO unused bug need research
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation "com.google.code.gson:gson:$versions.GSON"

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.1'

    androidTestImplementation "androidx.test:runner:$versions.ANDROIDX_TEST"
    androidTestImplementation "androidx.test:core:$versions.ANDROIDX_TEST"
    androidTestImplementation "androidx.test:rules:$versions.ANDROIDX_TEST"
    androidTestImplementation "androidx.test.ext:junit:$versions.ANDROIDX_TEST_EXT"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$versions.JUNIT_JUPITER"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$versions.JUNIT_JUPITER"

    testImplementation "io.mockk:mockk:$versions.MOCKK"
    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
