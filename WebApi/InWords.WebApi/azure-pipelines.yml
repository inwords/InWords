# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - WebApi/*
    
pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: '-c Release'
  testConfiguration: '-c Release --collect "Code coverage"'

# Build Stage
steps:
- task: UseDotNet@2
  displayName: 'Install .net core 3.1.101'
  inputs:
    packageType: sdk
    version: '3.1.101'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: 'build Release'
  inputs:
    command: build
    projects: '**/InWords.WebApi/InWords.WebApi.csproj'
    arguments: '$(buildConfiguration)'

# Unit testing
- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: test
    projects: 'D:\a\1\s\WebApi\InWords.WebApi\**\*Tests.cspro'
    arguments: '$(testConfiguration)'
    publishTestResults: true
    
# Publish artifacts stage
- task: DownloadSecureFile@1
  displayName: 'Download configuration file'
  inputs:
    secureFile: 'appsettings.security.json'

- task: CopyFiles@2
  inputs:
    SourceFolder: $(Agent.TempDirectory)
    Contents: appsettings.security.json
    TargetFolder: $(System.DefaultWorkingDirectory)/WebApi/InWords.WebApi/InWords.WebApi/bin/Release/netcoreapp3.1/

- task: PublishPipelineArtifact@1
  displayName: 'Publish artifacts: _WebApiBuild'
  inputs:
    path: $(System.DefaultWorkingDirectory)/WebApi/InWords.WebApi/InWords.WebApi/bin/Release/netcoreapp3.1/
    artifact: _WebApiBuild
  condition: succeeded()

- task: PublishPipelineArtifact@1
  displayName: 'Publish artifacts: _WebApiTests'
  inputs:
    path: $(System.DefaultWorkingDirectory)/WebApi/InWords.WebApi.IntegrationTests
    artifact: _WebApiTests
  condition: succeeded()