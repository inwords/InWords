<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InWords.WebApi</name>
    </assembly>
    <members>
        <member name="T:InWords.WebApi.AppStart.Startup">
            <summary>
                Main startup class
            </summary>
        </member>
        <member name="M:InWords.WebApi.AppStart.Startup.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
                Startup constructor
            </summary>
            <param name="env"></param>
        </member>
        <member name="M:InWords.WebApi.AppStart.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                This is the service configuration
            </summary>
            <summary>
                This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:InWords.WebApi.AppStart.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
                This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="loggerFactory"></param>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1._1.CardsGame.CustomLevelController.GetHistory">
            <summary>
                Use this to get last custom played games
            </summary>
            <deprecated>true</deprecated>
            <returns>History of users custom levels</returns>
            <response code="401">Unauthorized</response>
            <response code="200">OK</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1._1.CardsGame.GameController.PostScore(InWords.Data.DTO.GameBox.LevelMetric.LevelMetricQuery)">
            <summary>
                Use this to post score after game
            </summary>
            <deprecated>true</deprecated>
            <param name="levelMetricQuery"></param>
            <returns>Quantity of stars</returns>
            <response code="200">OK, scored</response>
            <response code="400">Null on request</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1._1.CardsGame.GameController.UploadScore(InWords.Data.DTO.GameBox.LevelMetric.LevelMetricQuery[])">
            <summary>
                Use to upload user results
            </summary>
            <returns>Quantity of stars and level id</returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1._1.DictionaryController.GetTraining">
            <summary>
                Get user dictionary words pairs to be repeated. Use when dictionary is not loaded or storage unavailable 
            </summary>
            <returns>Quantity of stars</returns>
            <response code="200">Words to be repeated</response>
            <response code="401">Unauthorized access</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1._1.DictionaryController.GetTrainingIds">
            <summary>
                Get user dictionary word pairs ids to be repeated. Use when dictionary is downloaded and resolve worlds on client
            </summary>
            <returns>Quantity of stars</returns>
            <response code="200">Word pairs Ids to be repeated</response>
            <response code="401">Unauthorized access</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1._1.ProfileSettings.UploadAvatar(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
                Use this to update user avatar
            </summary>
            <returns>Quantity of stars</returns>
            <response code="200">Words to be repeated</response>
            <response code="401">Unauthorized access</response>
            <response code="417">File is zero length</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1._1.TrainingController.Estimate(InWords.Data.DTO.Games.Levels.ClassicCardLevelMetricQuery)">
             <summary>
             Use this to upload user's level's metric
             </summary>
             <remarks>
             Sample request:
            
                 POST /estimate
                 
               {
                "metrics": [
                {
                    "gameLevelId": 12,
                    "wordPairIdOpenCounts": {
                        "1": 4,
                        "2": 5,
                        "5": 1
                    }
                },
               "metrics": [
                {
                    "gameLevelId": 0, (NOTE: If gameLevelId is zero game will be created in history)
                    "wordPairIdOpenCounts": {
                        "3": 1,
                        "2": 2,
                        "1": 3
                    }
                }
                ]
               }
                            
             </remarks>
        </member>
        <member name="T:InWords.WebApi.Controllers.v1.CardsGame.GameController">
            <inheritdoc />
            <summary>
                This game controller allow CRUD games
            </summary>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.CardsGame.GameController.AddGamePack(InWords.Data.DTO.GameBox.GamePack)">
            <summary>
                This is to add game pack from body use Game pack object
            </summary>
            <see cref="T:InWords.Data.DTO.GameBox.GamePack" />
            <param name="gamePack">describe game</param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.CardsGame.GameController.GetGameInfo">
            <summary>
                Returns short information about all games in database
            </summary>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.CardsGame.GameController.GetLevel(System.Int32)">
            <summary>
                This is to get Words translation list of level
            </summary>
            <see cref="T:InWords.Data.DTO.GameBox.Level" />
            <see cref="T:InWords.Data.DTO.WordTranslation" />
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.CardsGame.GameController.Delete(System.Int32)">
            <summary>
                This is api to delete game box
                Deletion allow only if it is your game
                of if your are admin
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.CardsGame.GameController.DeleteRange(System.Int32[])">
            <summary>
                This is to delete more then one game at request
            </summary>
            <param name="ids">array of game to be deleted</param>
            <response code="200">Count of deleted words</response>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.CardsGame.GameController.AddWordsToUserDictionary(System.Int32)">
             <summary>
             Adds words to the user dictionary by GameId avoiding existing ones
             </summary>
             <remarks>
             Sample request:
            
                 POST /AddWordsToUserDictionary
                 
                 42 // id of the game
                            
             </remarks>
             <param name="gameId">Game Id from which to take the words</param>
             <response code="200">Count of added words</response>
             <returns>Count of adding words</returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.CardsGame.ScoreController.PostScore(InWords.Data.DTO.GameBox.LevelMetric.LevelResult)">
            <summary>
                Use this to post score after game
            </summary>
            <deprecated>true</deprecated>
            <param name="levelResult"></param>
            <returns>Quantity of stars</returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.CardsGame.ScoreController.UploadScore(System.Collections.Generic.IEnumerable{InWords.Data.DTO.GameBox.LevelMetric.LevelResult})">
            <summary>
                Use to upload user results
            </summary>
            <param name="levelScores"></param>
            <returns>Quantity of stars and level id</returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.CardsGame.ScoreController.GetGame(System.Int32)">
            <summary>
                Use this to get game information by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:InWords.WebApi.Controllers.v1.AuthController">
            <inheritdoc />
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.AuthController.Token(InWords.Service.Auth.Models.BasicAuthClaims)">
            <summary>
                Request auth token
            </summary>
            <returns>A newly token</returns>
            <response code="200">Success</response>
            <response code="400">Access denied</response>
            
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.AuthController.Registration(InWords.Service.Auth.Models.BasicAuthClaims)">
            <summary>
                Create new user
            </summary>
            <returns>A newly created token</returns>
            <response code="200">returns new token</response>
            <response code="400">User already exists</response>
        </member>
        <member name="T:InWords.WebApi.Controllers.v1.SyncController">
            <summary>
                Everething about sync
            </summary>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.SyncController.PullWordPairs(System.Collections.Generic.List{System.Int32})">
            <summary>
                Pull word pairs
            </summary>
            <returns>Words pairs to delete and to add</returns>
            <response code="200">OK</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="T:InWords.WebApi.Controllers.v1.UsersController">
            <inheritdoc />
            <summary>
                Everything about user
            </summary>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.UsersController.GetUsers(System.String)">
            <summary>
                Get user by nickname
            </summary>
            <returns>list of users like nickname</returns>
            <response code="200">OK</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.UsersController.GetUserId(System.Int32)">
            <summary>
                Get user by id
            </summary>
            <returns>user with id</returns>
            <response code="200">OK</response>
            <response code="401">Unauthorized</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.UsersController.GetUser">
            <summary>
                Get authorized user information
            </summary>
            <returns>user with id</returns>
            <response code="200">OK</response>
            <response code="401">Unauthorized</response>
            <response code="404"></response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.UsersController.PutUser(InWords.Data.Domains.User)">
            <summary>
                Update an existing user
            </summary>
            <returns>user with id</returns>
            <response code="200">OK</response>
            <response code="400">Model is not valid</response>
            <response code="401">Unauthorized</response>
            <response code="404"></response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.UsersController.AdminDeleteUser(System.Int32)">
            <summary>
                Administratively delete user
            </summary>
            <returns>user with id</returns>
            <response code="204">The user is successfully deleted</response>
            <response code="401">Unauthorized</response>
            <response code="403">Access for administrations only</response>
            <response code="404">User not found</response>
        </member>
        <member name="T:InWords.WebApi.Controllers.v1.ValuesController">
            <summary>
                Controller for test purposes
            </summary>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.ValuesController.GetVersion">
            <summary>
                Get request api version
            </summary>
            <returns>user with id</returns>
            <response code="200">OK</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.ValuesController.GetUsersCount">
            <summary>
                Find out the number of registered users
            </summary>
            <returns>user with id</returns>
            <response code="200">OK</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.ValuesController.GetLogin">
            <summary>
                Get user by id
            </summary>
            <returns>user with id</returns>
            <response code="200">OK</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.ValuesController.GetRole">
            <summary>
                To check admin rights (Admin only)
            </summary>
            <returns>user with id</returns>
            <response code="200">OK</response>
            <response code="401">Unauthorized</response>
            <response code="403">Access denied</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.ValuesController.GetScore(System.Int32,System.Int32)">
            <summary>
                Check c++ scorelibrary
            </summary>
            <returns>user with id</returns>
            <response code="200">OK</response>
            <response code="500">SDK errors</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.ValuesController.#ctor(InWords.Data.InWordsDataContext,InWords.WebApi.Services.FtpLoader.Model.FileLoader)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:InWords.WebApi.Controllers.v1.WordsController">
            <inheritdoc />
            <summary>
                This is to CRUD words
            </summary>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.WordsController.AddPair(System.Collections.Generic.List{InWords.Data.DTO.WordTranslation})">
            <summary>
                Add list of words in dictionary
            </summary>
            <returns>user with id</returns>
            <response code="200">OK</response>
            <response code="400">Model is not valid</response>
            <response code="401">Unauthorized</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.WordsController.DeletePair(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
                Delete pairs from user dictionary
            </summary>
            <returns>user with id</returns>
            <response code="200">OK pair deleted count</response>
            <response code="400">Model is not valid</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v1.WordsController.#ctor(InWords.WebApi.Services.WordsService)">
            <summary>
            </summary>
            <param name="wordsService"></param>
        </member>
        <member name="M:InWords.WebApi.Controllers.v2.DictionaryController.AddWords(InWords.WebApi.gRPC.Services.AddWordsRequest)">
            <summary>
              Used to add words to the user's dictionary.
              The (localId) value should be zero (0) if you don't need to track words.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v2.DictionaryController.GetWords(InWords.WebApi.gRPC.Services.GetWordsRequest)">
            <summary>
              Use this to get words and delete words that not exists
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v2.ProfileController.Register(InWords.WebApi.gRPC.Services.RegistrationRequest)">
            <summary>
            Use this to register user
            </summary>
            <param name="request"></param>
            <returns></returns>
            <remarks>
            Token will be sent in response to the request.               
             
            During registration a activation message will be sent to the user's email. 
             
            400 means that the user was not found or the password was entered incorrectly
            </remarks>
        </member>
        <member name="M:InWords.WebApi.Controllers.v2.ProfileController.Token(InWords.WebApi.gRPC.Services.TokenRequest)">
            <summary>
                Use this to get token
            </summary>
            <returns>user's access token</returns>
            <response code="200">Success</response>
            <response code="400">Access denied</response>
        </member>
        <member name="M:InWords.WebApi.Controllers.v2.ProfileController.UpdateEmail(InWords.WebApi.gRPC.Services.EmailChangeRequest)">
            <summary>
              Use this to request update user's email
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v2.ProfileController.ConfirmEmail(InWords.WebApi.gRPC.Services.ConfirmEmailRequest)">
            <summary>
              Use this to confirm email code
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Controllers.v2.WordSetController.Register(InWords.WebApi.gRPC.Services.WordSetWordsRequest)">
            <summary>
            This is to get word's in word set
            </summary>
            <param name="request"></param>
            <returns></returns>
            <remarks>
             
            . 
            Word's marked as hasAdded if user already has this word in the dictionary.               
             
            
            </remarks>
        </member>
        <member name="M:InWords.WebApi.Extensions.StringExtensions.StripHTML(System.String)">
            <summary>
                This is to get raw text inside html/xml tags
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:InWords.WebApi.Extensions.Transfer.DescriptionInfoExtensions">
            <summary>
            </summary>
        </member>
        <member name="M:InWords.WebApi.Extensions.Transfer.DescriptionInfoExtensions.GetRus(System.Collections.Generic.List{InWords.Data.DTO.Creation.DescriptionInfo})">
            <summary>
                Test method returning Russian description
            </summary>
            <param name="descriptionInfos"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Extensions.UserWordPairExtensions.ToWordTranslations(System.Collections.Generic.IEnumerable{InWords.Data.Domains.UserWordPair})">
            <summary>
                Convert UserWorkPair to WordTranslation
            </summary>
            <param name="userWordPairs"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Extensions.UserWordPairExtensions.ToWordTranslations(InWords.Data.Domains.UserWordPair)">
            <summary>
                Convert UserWorkPair to WordTranslation
            </summary>
            <param name="uwp"></param>
            <returns></returns>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.DictionaryV2Reflection">
            <summary>Holder for reflection information generated from gRPC/Protos/Dictionary.v2.proto</summary>
        </member>
        <member name="P:InWords.WebApi.gRPC.Services.DictionaryV2Reflection.Descriptor">
            <summary>File descriptor for gRPC/Protos/Dictionary.v2.proto</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.GetWordsRequest">
            <summary>
            The request message containing the user's credentials.
            </summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.GetWordsRequest.UserWordpairIdsFieldNumber">
            <summary>Field number for the "UserWordpairIds" field.</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.WordsReply">
            <summary>
            The response message containing the Token.
            </summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.WordsReply.ToAddFieldNumber">
            <summary>Field number for the "ToAdd" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.WordsReply.ToDeleteFieldNumber">
            <summary>Field number for the "ToDelete" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.WordReply.UserWordPairFieldNumber">
            <summary>Field number for the "UserWordPair" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.WordReply.WordForeignFieldNumber">
            <summary>Field number for the "WordForeign" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.WordReply.WordNativeFieldNumber">
            <summary>Field number for the "WordNative" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.WordReply.PeriodFieldNumber">
            <summary>Field number for the "Period" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.AddWordsRequest.WordsFieldNumber">
            <summary>Field number for the "Words" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.AddWordRequest.LocalIdFieldNumber">
            <summary>Field number for the "LocalId" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.AddWordRequest.WordForeignFieldNumber">
            <summary>Field number for the "WordForeign" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.AddWordRequest.WordNativeFieldNumber">
            <summary>Field number for the "WordNative" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.AddWordsReply.WordIdsFieldNumber">
            <summary>Field number for the "WordIds" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.AddWordReply.LocalIdFieldNumber">
            <summary>Field number for the "LocalId" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.AddWordReply.ServerIdFieldNumber">
            <summary>Field number for the "ServerId" field.</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.DictionaryProvider">
            <summary>
            The greeting service definition.
            </summary>
        </member>
        <member name="P:InWords.WebApi.gRPC.Services.DictionaryProvider.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.DictionaryProvider.DictionaryProviderBase">
            <summary>Base class for server-side implementations of DictionaryProvider</summary>
        </member>
        <member name="M:InWords.WebApi.gRPC.Services.DictionaryProvider.DictionaryProviderBase.GetWords(InWords.WebApi.gRPC.Services.GetWordsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Sends a greeting
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:InWords.WebApi.gRPC.Services.DictionaryProvider.BindService(InWords.WebApi.gRPC.Services.DictionaryProvider.DictionaryProviderBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:InWords.WebApi.gRPC.Services.DictionaryProvider.BindService(Grpc.Core.ServiceBinderBase,InWords.WebApi.gRPC.Services.DictionaryProvider.DictionaryProviderBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.GreetReflection">
            <summary>Holder for reflection information generated from gRPC/Protos/greet.proto</summary>
        </member>
        <member name="P:InWords.WebApi.gRPC.Services.GreetReflection.Descriptor">
            <summary>File descriptor for gRPC/Protos/greet.proto</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.HelloRequest">
            <summary>
            The request message containing the user's name.
            </summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.HelloRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.HelloReply">
            <summary>
            The response message containing the greetings.
            </summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.HelloReply.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.Greeter">
            <summary>
            The greeting service definition.
            </summary>
        </member>
        <member name="P:InWords.WebApi.gRPC.Services.Greeter.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.Greeter.GreeterBase">
            <summary>Base class for server-side implementations of Greeter</summary>
        </member>
        <member name="M:InWords.WebApi.gRPC.Services.Greeter.GreeterBase.SayHello(InWords.WebApi.gRPC.Services.HelloRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Sends a greeting
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:InWords.WebApi.gRPC.Services.Greeter.BindService(InWords.WebApi.gRPC.Services.Greeter.GreeterBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:InWords.WebApi.gRPC.Services.Greeter.BindService(Grpc.Core.ServiceBinderBase,InWords.WebApi.gRPC.Services.Greeter.GreeterBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.WordSetV2Reflection">
            <summary>Holder for reflection information generated from gRPC/Protos/WordSet.v2.proto</summary>
        </member>
        <member name="P:InWords.WebApi.gRPC.Services.WordSetV2Reflection.Descriptor">
            <summary>File descriptor for gRPC/Protos/WordSet.v2.proto</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.WordSetWordsRequest">
            <summary>
            The request message containing the user's credentials.
            </summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.WordSetWordsRequest.WordSetIdFieldNumber">
            <summary>Field number for the "WordSetId" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.WordSetWordsReply.WordsFieldNumber">
            <summary>Field number for the "Words" field.</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.WordSetWord">
            <summary>
            The response message containing the Token.
            </summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.WordSetWord.WordPairIdFieldNumber">
            <summary>Field number for the "WordPairId" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.WordSetWord.HasAddedFieldNumber">
            <summary>Field number for the "HasAdded" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.WordSetWord.WordForeignFieldNumber">
            <summary>Field number for the "WordForeign" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.WordSetWord.WordNativeFieldNumber">
            <summary>Field number for the "WordNative" field.</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.WordSetProvider">
            <summary>
            The greeting service definition.
            </summary>
        </member>
        <member name="P:InWords.WebApi.gRPC.Services.WordSetProvider.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.WordSetProvider.WordSetProviderBase">
            <summary>Base class for server-side implementations of WordSetProvider</summary>
        </member>
        <member name="M:InWords.WebApi.gRPC.Services.WordSetProvider.WordSetProviderBase.GetWordsList(InWords.WebApi.gRPC.Services.WordSetWordsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Sends a greeting
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:InWords.WebApi.gRPC.Services.WordSetProvider.BindService(InWords.WebApi.gRPC.Services.WordSetProvider.WordSetProviderBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:InWords.WebApi.gRPC.Services.WordSetProvider.BindService(Grpc.Core.ServiceBinderBase,InWords.WebApi.gRPC.Services.WordSetProvider.WordSetProviderBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.ProfileV2Reflection">
            <summary>Holder for reflection information generated from gRPC/Protos/Profile.v2.proto</summary>
        </member>
        <member name="P:InWords.WebApi.gRPC.Services.ProfileV2Reflection.Descriptor">
            <summary>File descriptor for gRPC/Protos/Profile.v2.proto</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.RegistrationRequest">
            <summary>
            The request message containing the user's credentials.
            </summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.RegistrationRequest.EmailFieldNumber">
            <summary>Field number for the "email" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.RegistrationRequest.PasswordFieldNumber">
            <summary>Field number for the "password" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.RegistrationRequest.IsAnonymousFieldNumber">
            <summary>Field number for the "IsAnonymous" field.</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.RegistrationReply">
            <summary>
            The response message containing the Token.
            </summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.RegistrationReply.UseridFieldNumber">
            <summary>Field number for the "userid" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.RegistrationReply.TokenFieldNumber">
            <summary>Field number for the "token" field.</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.TokenRequest">
            <summary>
            The request message containing the user's credentials.
            </summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.TokenRequest.EmailFieldNumber">
            <summary>Field number for the "email" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.TokenRequest.PasswordFieldNumber">
            <summary>Field number for the "password" field.</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.TokenReply">
            <summary>
            The response message containing the Token.
            </summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.TokenReply.UserIdFieldNumber">
            <summary>Field number for the "userId" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.TokenReply.TokenFieldNumber">
            <summary>Field number for the "token" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.EmailChangeRequest.EmailFieldNumber">
            <summary>Field number for the "email" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.EmailChangeReply.EmailFieldNumber">
            <summary>Field number for the "email" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.ConfirmEmailRequest.EmailFieldNumber">
            <summary>Field number for the "email" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.ConfirmEmailRequest.CodeFieldNumber">
            <summary>Field number for the "code" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.ConfirmEmailLinkRequest.ActivationGuidFieldNumber">
            <summary>Field number for the "activationGuid" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.ConfirmEmailReply.EmailFieldNumber">
            <summary>Field number for the "email" field.</summary>
        </member>
        <member name="F:InWords.WebApi.gRPC.Services.DeleteAccountRequest.TextFieldNumber">
            <summary>Field number for the "text" field.</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.Profile">
            <summary>
            The Profile service definition.
            </summary>
        </member>
        <member name="P:InWords.WebApi.gRPC.Services.Profile.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:InWords.WebApi.gRPC.Services.Profile.ProfileBase">
            <summary>Base class for server-side implementations of Profile</summary>
        </member>
        <member name="M:InWords.WebApi.gRPC.Services.Profile.BindService(InWords.WebApi.gRPC.Services.Profile.ProfileBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:InWords.WebApi.gRPC.Services.Profile.BindService(Grpc.Core.ServiceBinderBase,InWords.WebApi.gRPC.Services.Profile.ProfileBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:InWords.WebApi.Module.InModule">
            <summary>
                This is to improve project infrastructure using reflection
                and file segregation
            </summary>
        </member>
        <member name="M:InWords.WebApi.Module.InModule.ConfigureIoc(Autofac.ContainerBuilder)">
            <summary>
                This is to segregate Ioc configuration layer from startup class
            </summary>
        </member>
        <member name="M:InWords.WebApi.Module.InModule.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                This is to provide service collection to configure
            </summary>
            <param name="services"></param>
            <returns>Service collection</returns>
        </member>
        <member name="M:InWords.WebApi.Module.InModule.ConfigureApp(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
               This is to provide ApplicationBuilder to configure
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:InWords.WebApi.Providers.AccountIdentityProvider.#ctor(InWords.Service.Auth.Interfaces.IJwtProvider,InWords.Data.Repositories.AccountRepository,InWords.Data.Repositories.UserRepository)">
            <summary>
                Create provider via repository
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:InWords.WebApi.Providers.AccountIdentityProvider.GetIdentity(InWords.Service.Auth.Models.BasicAuthClaims)">
            <summary>
                This is to check user identity [FromBody]
            </summary>
            <param name="user"></param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Providers.AccountIdentityProvider.GetIdentity(System.String,System.String)">
            <summary>
                This is to check user identity
            </summary>
            <param name="email"></param>
            <param name="password"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:InWords.WebApi.Providers.AccountIdentityProvider.GetIdentity(InWords.Data.Domains.Account)">
            <summary>
            </summary>
            <param name="account"></param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.Abstractions.IGameScoreService.GetGameStarsAsync(System.Int32,InWords.Data.DTO.GameBox.GameObject)">
            <summary>
                This is to read user score on game level
            </summary>
            <param name="userId"></param>
            <param name="game"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.Abstractions.IGameScoreService.GetLevelScore(InWords.Data.DTO.GameBox.LevelMetric.LevelResult)">
            <summary>
                This is to update user score on game level
            </summary>
            <param name="levelResult"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.Abstractions.IGameScoreService.PostScoreAsync(System.Int32,InWords.Data.DTO.GameBox.LevelMetric.LevelMetricQueryResult)">
            <summary>
                This is to set level score to user level storage
            </summary>
            <param name="userId"></param>
            <param name="levelMetricQueryResult"></param>
            <exception cref="T:System.ArgumentNullException">Null game box is not find</exception>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.Abstractions.IGameScoreService.UploadScoreAsync(System.Int32,System.Collections.Generic.IEnumerable{InWords.Data.DTO.GameBox.LevelMetric.LevelMetricQueryResult})">
            <summary>
                This is to push all score from cache storage
            </summary>
            <param name="userId"></param>
            <param name="levelScores"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.DictionaryService.Extentions.AddWordPairsExtentions.AddWordPairs(Microsoft.EntityFrameworkCore.DbSet{InWords.Data.Domains.WordPair},System.Collections.Generic.IEnumerable{InWords.Data.Domains.WordPair})">
            <summary>
            Return map of inverted keyPair
            </summary>
            <param name="wordPairs"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.Email.EmailCodeVerificationService.HasCorrectCode(System.Int32,System.String,System.Int32)">
            <summary>
                This is to check code and if it's right code dispose all email verification.
                information about this user
            </summary>
            <param name="userId">System user's id</param>
            <param name="email">System user's email</param>
            <param name="code">Code from request</param>
            <returns>State if operation is success (true)/(false)</returns>
            <exception cref="T:System.ArgumentNullException">Email not found or not registred</exception>
        </member>
        <member name="M:InWords.WebApi.Services.Email.EmailSenders.EmailSender.SetText(System.String)">
            <summary>
                Reset body and set text message
            </summary>
            <param name="message">text message</param>
        </member>
        <member name="M:InWords.WebApi.Services.Email.EmailSenders.EmailSender.SetHTML(System.String,System.String)">
            <summary>
                Reset body and set html boyd and alttext
            </summary>
            <param name="html"></param>
            <param name="altText"></param>
        </member>
        <member name="T:InWords.WebApi.Services.Email.EmailVerifierService">
            <summary>
                This is register a user's profile for review by email
            </summary>
        </member>
        <member name="M:InWords.WebApi.Services.Email.EmailVerifierService.InstatiateVerifierMessage(InWords.Data.Domains.User,System.String)">
            <summary>
                Send message to user and register message in system
            </summary>
            <param name="user"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="T:InWords.WebApi.Services.Email.Template.EmailTemplateBase">
            <summary>
                Abstract class provide information about email to
                send it by <see cref="T:InWords.WebApi.Services.Email.EmailSenders.EmailTemplateSender" />
            </summary>
        </member>
        <member name="M:InWords.WebApi.Services.GameService.GameScoreService.InWords#WebApi#Services#Abstractions#IGameScoreService#GetLevelScore(InWords.Data.DTO.GameBox.LevelMetric.LevelResult)">
            <summary>
                This is to local compute score
            </summary>
            <param name="levelResult"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.GameService.GameScoreService.UpdateLevelsAsync(System.Collections.Generic.IEnumerable{InWords.Data.Creations.GameBox.UserGameLevel},System.Collections.Generic.IEnumerable{InWords.Data.DTO.GameBox.LevelMetric.LevelMetricQueryResult})">
            <summary>
            </summary>
            <param name="levelsToUpdate">All levels that exist in database</param>
            <param name="levelScores">All score that user send</param>
            <returns></returns>
        </member>
        <member name="T:InWords.WebApi.Services.GameService.GameService">
            <summary>
                Service that contain CRUD for Game
            </summary>
            <see cref="T:InWords.Data.Models.InWords.Games.Game" />
        </member>
        <member name="M:InWords.WebApi.Services.GameService.GameService.#ctor(InWords.WebApi.Services.CreationService,InWords.Data.Repositories.CreationRepository,InWords.WebApi.Services.GameService.GameLevelService)">
            <summary>
                Basic constructor
            </summary>
            <param name="creationService"></param>
            <param name="creationRepository"></param>
            <param name="gameLevelService"></param>
        </member>
        <member name="M:InWords.WebApi.Services.GameService.GameService.GetGameObjectAsync(System.Int32)">
            <summary>
                This is to get full information about certain game
            </summary>
            <param name="gameId"></param>
            <returns></returns>
        </member>
        <member name="P:InWords.WebApi.Services.GameWordsToDictionary.ByGameIdUserId.GameToUserQueryResult.WordsAdded">
            <summary>
                Total words added excluding existing ones
            </summary>
        </member>
        <member name="M:InWords.WebApi.Services.CardGame.GameResultService.SetResultsAsync(System.Int32,InWords.Data.DTO.GameBox.LevelMetric.LevelMetricQuery)">
            <summary>
                This is to get score by level and update information of memorizing user word pairs
            </summary>
            <param name="userId"></param>
            <param name="levelMetricQuery"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.Users.AccountUpdate.DeleteAccount.HandleRequest(InWords.WebApi.Services.Abstractions.AuthorizedRequestObject{InWords.WebApi.gRPC.Services.DeleteAccountRequest,InWords.WebApi.gRPC.Services.Empty},System.Threading.CancellationToken)">
            <summary>
            Delete account by id if exist
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <exception cref="T:System.ArgumentNullException">Account not found</exception>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.Users.Registration.UserRegistration.HandleRequest(InWords.WebApi.Services.Abstractions.RequestObject{InWords.WebApi.gRPC.Services.RegistrationRequest,InWords.WebApi.gRPC.Services.RegistrationReply},System.Threading.CancellationToken)">
            <summary>
            Use this is to register new yousers
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <exception cref="T:System.ArgumentNullException">If request is null</exception>
            <exception cref="T:System.ArgumentException">If email not exist</exception>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.Users.Registration.UserRegistration.IsAccountExist(System.String)">
            <summary>
            This method check if email exist
            </summary>
            <exception cref="T:System.ArgumentException">Email already exist</exception>
            <param name="email"></param>
        </member>
        <member name="M:InWords.WebApi.Services.Users.Token.UserToken.HandleRequest(InWords.WebApi.Services.Abstractions.RequestObject{InWords.WebApi.gRPC.Services.TokenRequest,InWords.WebApi.gRPC.Services.TokenReply},System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <exception cref="T:System.ArgumentNullException">Account not found</exception>
            <exception cref="T:System.ArgumentException">Password not match</exception>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.UserWordPairService.Abstraction.KnowledgeLicenseProvider.Ebbinghaus(System.Int32,System.Double)">
            <summary>
                Implementation of
                <a href="https://en.wikipedia.org/wiki/Forgetting_curve">Forgetting curve</a>
            </summary>
            <param name="subconsciousLevel"></param>
            <param name="MemoryLevel"></param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.UserWordPairService.KnowledgeUpdateService.UpdateKnowledge(System.Int32,InWords.WebApi.Services.UserWordPairService.Abstraction.IKnowledgeQualifier)">
            <summary>
                This is to update <see cref="T:InWords.Data.Domains.UserWordPair" /> learning period
            </summary>
            <param name="PairKnowledges">Int is <see cref="T:InWords.Data.Domains.UserWordPair" /> id</param>
            <returns></returns>
        </member>
        <member name="M:InWords.WebApi.Services.UserWordPairService.KnowledgeUpdateService.UpdateLicenseInformation(System.Collections.Generic.IEnumerable{InWords.Data.Domains.UserWordPair},System.Collections.Generic.Dictionary{System.Int32,InWords.WebApi.Services.UserWordPairService.Enum.KnowledgeQualitys})">
            <summary>
                This method for updating <see cref="T:InWords.Data.Domains.UserWordPair" />'s learning period and time to learning
                using PairKnowledges from IKnowledgeQualifier.
            </summary>
            <param name="userWordPairs"></param>
            <param name="PairKnowledges"></param>
            <returns></returns>
        </member>
        <member name="T:InWords.WebApi.Swagger.RemoveVersionParameters">
            <summary>
                This is need to Remove Version Parameters from url path in Swagger UI.
                For example v{version}/get replace to v1.1/get
            </summary>
        </member>
        <member name="M:InWords.WebApi.Swagger.RemoveVersionParameters.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
                Operation filter interfere method
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="M:InWords.WebApi.Swagger.SwaggerFactory.GetApiVersions(System.Reflection.MemberInfo)">
            <summary>
                This is to ger api version from member info to swagger configuration
            </summary>
            <param name="methodInfo"></param>
            <returns>ApiVersions</returns>
        </member>
        <member name="M:InWords.WebApi.Swagger.SwaggerFactory.ConfigureSwaggerComments(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
                This is to enable swagger external dev xml comments.
                Warning! To use this enable xml comments output
            </summary>
            <param name="c"></param>
        </member>
    </members>
</doc>
